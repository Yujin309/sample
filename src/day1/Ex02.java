package day1;
// 자바의 이름 짓기 규칙

// 1.자바는 낙타등 (camel back) 표기법을 따른다.
// 낙타등 표기법이란 첫단어는 모두 소문자로
// 그 다음부터는 단어의 첫글자만 대문자로
// 예시: number, fristNumber, secondNumber

// 2.클래스는 대문자로 시작하는 명사.
// 예시 : Ex01,Ex02, String

// 3.메소드는 소문자로 시작하는 동사
// 예시 : println(), print(), nextln()

// 4.변수는 소문자로 시작하는 명사
// 예시 : number, fristNumber, secondNumber

// 5. 상수는 모두 다 대문자로 적어주고 단어사이는 _를 넣어준다
// 예시 : PI, UNIT_PTICE, UNOT_MINUTE

// 6.변수의 이름은 예약어가 될수 없다.
// 예약어란, 자바에서 프로그램적으로 필요한 단어들로써
// 36가지가 있다.
// 예시 : int int->안됨
// 그러면 우리가 36가지를 모두 다 외워줘야할까?
// 아니다. 왜냐하면 이클립스에서 "보라색"으로 뜨는 단어들이
// 예약어 이기 때문! 

// 변수명이나 메소드 명은
// 숫자로 시작하거나 특수문자가 들어갈수 없다
// 예시: 1number, 2number, ☆myNumber☆ -> 안됨
// number1 -> 됨 

// 자바에서 이제 어느정도 한글을 쓸수 있지만
// 한글은 주석에만 씁시다.

public class Ex02 {
public static void main(String[] args) {
	//변수를 우리가 선언해 보자
	int number = 10;
	System.out.println(number);
	
	//변수는 우리가 값을 여러번 초기화 해 줄수 있다.
	number = 20;
	System.out.println(number);
	
	// 해당 공간과 맞는 데이터 타입이면 
	// 어떤 값이든 집어 넣어줄 수 있지만
	// 만약에 해당 공간과 맞지 않는 데이터 타입이면?
	// 2가지 경우가 존재 할수 있다.
	// 1번 암시적 형변환
	// 더 작은 데이터 타입의 값을
	// 더 큰 데이터 타입의 변수에 넣어줄때
	// 데이터 손실이 일어날수 없으니
	// 문제 없이 자동으로 형변형이 가능하다.
	// 예시 
	byte myByte =5;
	number= myByte;
	System.out.println(number);
	
	// 2번 명시적 형변환
	// 명시적 형변화는
	// 더 큰 데이터타입의 데이터를
	// 더 작은 변수에 담을때 
	// 데이터 손실이 일어날수 있지만
	// 그래도 담으라고 할때 명시적 형변환을 해주어야 한다.
	// 명시적 형변환은 
	// ()안에 바꿀 데이터 타입을 적어준다.
	number= 1000;
	myByte = (byte)number;
	System.out.println(myByte);
	
	//실수형 데이터타입들을
	//정수로 바꾸면 어떻게 될까?
	
	//자바에서는 실수는 기본적으로 double 인식된다.
	double myDouble = 3.14;
	number = (int)myDouble;
	System.out.println(number);
	
	//그러면 정수 /정수 를 해서
	//실수로 바꿀려면 어떻게 해야할까?
	int sum = 343;
	double avg = 343/3.0;
	//위에서 343/3을 하게 되면?
	//먼저 인트나누기 인트 -> 인트가 나온다.
	//즉 114가 나오고
	//그 114를 더블로 바꾸기 때문에
	//우리가 원하는 114.3333이란 값대신
	//114.0000이 나오게 된다.
	//따라서 평균같이
	//실수가 나와야하는 계산은
	//정수 나누기 정수를 실수로 바꾸는게 아니라
	//정수 나누기 실수를 실행해 줘야한다. 
	
	//따라서 343/3.0을 해줘야 한다!
	System.out.println(avg);
	}
}
